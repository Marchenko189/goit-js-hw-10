{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from \"izitoast\";\n\nimport flatpickr from \"flatpickr\";\n\nconst options = {\n  enableTime: true,\n  disableMobile: true,\n  time_24hr: true,\n  locale: {\n    weekdays: {\n      shorthand: [\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"], \n      longhand: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n    },\n    months: {\n      shorthand: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"], \n      longhand: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"] \n    }\n  },\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0]; // Отримання першої обраної дати\n\n    if (userSelectedDate <= Date.now()) { //Перевірка валідності дати\n        iziToast.warning({\n        title: \"Warning\",\n        message: \"Please choose a date in the future\",\n        position: 'bottomCenter',\n      });\n        startBtn.disabled = true; //Якщо дата минула, кнопка деактивована\n    } else {\n        startBtn.disabled = false; //Якщо дата майбутня, кнопка активована\n    }   \n    },\n};\n\nnew flatpickr('#datetime-picker', options); //Ініциалізація бібліотеки\n\nlet userSelectedDate; //Змінна для зберігання обраної дати\n\nconst dateTimePicker = document.querySelectorAll('input'); // Отримання input\n\nconst startBtn = document.querySelector('button[data-start]'); // Отримання кнопки\n\nstartBtn.disabled = true; // Спочатку кнопка деактивована при завантаженні сторінки\n\nstartBtn.addEventListener('click', () => { // При натисканні на кнопку починається відлік\n    if (userSelectedDate) {\n        startCountDown(userSelectedDate);\n    }\n    iziToast.info({\n        title: \"Info\",\n        message: \"Timer started\",\n        position: 'bottomCenter',\n      });\n    startBtn.disabled = true;\n     dateTimePicker.forEach(input => {\n         input.disabled = true;\n    });\n});\n\nfunction startCountDown(userSelectedDate) { // Функція для початку відліку часу\n    const interval = setInterval(() => {\n    const ms = userSelectedDate - Date.now();\n      \n     if (ms <= 0) {\n        clearInterval(interval);\n         iziToast.success({\n        title: \"Success\",\n        message: \"Time over\",\n        position: 'bottomCenter',\n      });\n        dateTimePicker.forEach(input => {\n        input.disabled = false;\n    }); \n    } else {\n        const timeVal = convertMs(ms);\n      updateUI(timeVal); \n    }\n    }, 1000);\n};\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);  \n\n    return { days, hours, minutes, seconds };\n};\n\nconst dataDays = document.querySelector('[data-days]');\nconst dataHours = document.querySelector('[data-hours]');\nconst dataMinutes = document.querySelector('[data-minutes]');\nconst dataSeconds = document.querySelector('[data-seconds]');\n\nfunction updateUI(timeVal) {\n    // Оновлення значень на екрані\n    dataDays.textContent = addLeadingZero(timeVal.days);\n    dataHours.textContent = addLeadingZero(timeVal.hours);\n    dataMinutes.textContent = addLeadingZero(timeVal.minutes);\n    dataSeconds.textContent = addLeadingZero(timeVal.seconds);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n};\n\n\n\n\n\n\n\n\n"],"names":["options","selectedDates","userSelectedDate","iziToast","startBtn","flatpickr","dateTimePicker","startCountDown","input","interval","ms","timeVal","convertMs","updateUI","days","hours","minutes","seconds","dataDays","dataHours","dataMinutes","dataSeconds","addLeadingZero","value"],"mappings":"+IAIA,MAAMA,EAAU,CACd,WAAY,GACZ,cAAe,GACf,UAAW,GACX,OAAQ,CACN,SAAU,CACR,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAI,EACpD,SAAU,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,QAAQ,CACxF,EACD,OAAQ,CACN,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAC9F,SAAU,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,UAAU,CACpI,CACF,EACD,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAE9BC,GAAoB,KAAK,OACzBC,EAAS,QAAQ,CACjB,MAAO,UACP,QAAS,qCACT,SAAU,cAClB,CAAO,EACCC,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACL,EAEA,IAAIC,EAAU,mBAAoBL,CAAO,EAEzC,IAAIE,EAEJ,MAAMI,EAAiB,SAAS,iBAAiB,OAAO,EAElDF,EAAW,SAAS,cAAc,oBAAoB,EAE5DA,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAAS,IAAM,CACjCF,GACAK,EAAeL,CAAgB,EAEnCC,EAAS,KAAK,CACV,MAAO,OACP,QAAS,gBACT,SAAU,cAClB,CAAO,EACHC,EAAS,SAAW,GACnBE,EAAe,QAAQE,GAAS,CAC5BA,EAAM,SAAW,EAC1B,CAAK,CACL,CAAC,EAED,SAASD,EAAeL,EAAkB,CACtC,MAAMO,EAAW,YAAY,IAAM,CACnC,MAAMC,EAAKR,EAAmB,KAAK,IAAG,EAErC,GAAIQ,GAAM,EACP,cAAcD,CAAQ,EACrBN,EAAS,QAAQ,CAClB,MAAO,UACP,QAAS,YACT,SAAU,cAClB,CAAO,EACCG,EAAe,QAAQE,GAAS,CAChCA,EAAM,SAAW,EACzB,CAAK,MACM,CACH,MAAMG,EAAUC,EAAUF,CAAE,EAC9BG,EAASF,CAAO,CACjB,CACA,EAAE,GAAI,CACX,CAEA,SAASC,EAAUF,EAAI,CAQrB,MAAMI,EAAO,KAAK,MAAMJ,EAAK,KAAG,EAE1BK,EAAQ,KAAK,MAAOL,EAAK,MAAO,IAAI,EAEpCM,EAAU,KAAK,MAAQN,EAAK,MAAO,KAAQ,GAAM,EAEjDO,EAAU,KAAK,MAASP,EAAK,MAAO,KAAQ,IAAU,GAAM,EAEhE,MAAO,CAAE,KAAAI,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,MAAMC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,SAASR,EAASF,EAAS,CAEvBO,EAAS,YAAcI,EAAeX,EAAQ,IAAI,EAClDQ,EAAU,YAAcG,EAAeX,EAAQ,KAAK,EACpDS,EAAY,YAAcE,EAAeX,EAAQ,OAAO,EACxDU,EAAY,YAAcC,EAAeX,EAAQ,OAAO,CAC5D,CAEA,SAASW,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}