{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0]; // Отримання першої обраної дати\n\n    if (userSelectedDate <= Date.now()) { //Перевірка валідності дати\n        alert(\"Please choose a date in the future\"); \n        startBtn.disabled = true; //Якщо дата минула, кнопка деактивована\n    } else {\n        startBtn.disabled = false; //Якщо дата майбутня, кнопка активована\n    }   \n    },\n};\n\nnew flatpickr('#datetime-picker', options); //Ініциалізація бібліотеки\n\nlet userSelectedDate; //Змінна для зберігання обраної дати\nconsole.log(userSelectedDate);\n\nconst startBtn = document.querySelector('button[data-start]'); // Отримання кнопки\n\nstartBtn.addEventListener('click', () => { // При натисканні на кнопку починається відлік\n    if (userSelectedDate) {\n        startCountDown(userSelectedDate);\n    }\n});\n\nfunction startCountDown(userSelectedDate) { // Функція для початку відліку часу\n    const interval = setInterval(() => {\n    const ms = userSelectedDate - Date.now();\n      \n    if (ms <= 0) {\n      clearInterval(interval);\n    } else {\n        const timeVal = convertMs(ms);\n      console.log(`${timeVal.days} days, ${timeVal.hours} hours, ${timeVal.minutes} minutes, ${timeVal.seconds} seconds`);\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n"],"names":["options","selectedDates","userSelectedDate","startBtn","flatpickr","startCountDown","interval","ms","timeVal","convertMs","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAE9BC,GAAoB,KAAK,OACzB,MAAM,oCAAoC,EAC1CC,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACL,EAEA,IAAIC,EAAU,mBAAoBJ,CAAO,EAEzC,IAAIE,EACJ,QAAQ,IAAIA,CAAgB,EAE5B,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAE5DA,EAAS,iBAAiB,QAAS,IAAM,CACjCD,GACAG,EAAeH,CAAgB,CAEvC,CAAC,EAED,SAASG,EAAeH,EAAkB,CACtC,MAAMI,EAAW,YAAY,IAAM,CACnC,MAAMC,EAAKL,EAAmB,KAAK,IAAG,EAEtC,GAAIK,GAAM,EACR,cAAcD,CAAQ,MACjB,CACH,MAAME,EAAUC,EAAUF,CAAE,EAC9B,QAAQ,IAAI,GAAGC,EAAQ,IAAI,UAAUA,EAAQ,KAAK,WAAWA,EAAQ,OAAO,aAAaA,EAAQ,OAAO,UAAU,CACnH,CACF,EAAE,GAAI,CACT,CAEA,SAASC,EAAUF,EAAI,CAQrB,MAAMG,EAAO,KAAK,MAAMH,EAAK,KAAG,EAE1BI,EAAQ,KAAK,MAAOJ,EAAK,MAAO,IAAI,EAEpCK,EAAU,KAAK,MAAQL,EAAK,MAAO,KAAQ,GAAM,EAEjDM,EAAU,KAAK,MAASN,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}